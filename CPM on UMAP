# Seurat vs CPM
setwd("/Users/suifangmao/Byond Chapter 9")

library(Seurat)
library(dplyr)
library(cowplot)

## 1 load Data
pbmc.data <- Read10X(data.dir = "data/")
pbmc<-CreateSeuratObject(counts=pbmc.data, min.cells = 3, min.features = 200, project = "10X_PBMC", assay = "RNA")
pbmc
## 2 QC filter
mito.genes <- grep(pattern = "^MT-", x = rownames(pbmc@assays[["RNA"]]), value = TRUE)
percent.mito <- Matrix::colSums(pbmc@assays[["RNA"]][mito.genes, ])/Matrix::colSums(pbmc@assays[["RNA"]])
pbmc<-AddMetaData(object = pbmc, metadata = percent.mito, col.name ="percent.mito")
pbmc <- subset(x = pbmc, subset = nFeature_RNA > 200 & nFeature_RNA < 2500 & percent.mito >  -Inf & percent.mito < 0.05 )

## 3 convert to single cell experiment
library(ggplot2)
library(scater)
pbmc.sce <- as.SingleCellExperiment(pbmc)
pbmc.sce

## 4 CPM normalisation
# For CPM normalisation, we use scaterâ€™s calculateCPM()
#CPM function: dividing each column by its total then multiplying by 1,000,000 and Spike-ins are excluded

logcounts(pbmc.sce) <- log2(calculateCPM(pbmc.sce, size_factors = NULL) + 1)
pbmc.sce
## 5 Visualize CPM on PCA plot
cpm <- runPCA(pbmc.sce, exprs_values = "logcounts")
plotPCA(cpm)

cpm<-runTSNE(pbmc.sce, exprs_values = "logcounts")
plotTSNE(cpm) 

## 6 Cell cluster by tSNE+Kmeans
pbmc.sce <- runTSNE(pbmc.sce, rand_seed = 1)
colData(pbmc.sce)$tSNE_kmeans <- as.character(kmeans(reducedDim(pbmc.sce, "TSNE"), centers = 8)$clust)
plotpbmc<- runUMAP(pbmc.sce, exprs_values = "logcounts")
plotUMAP(plotpbmc, colour_by = "tSNE_kmeans")
